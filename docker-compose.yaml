version: "2.3"

services:
  postgres:
    image: postgres
    container_name: hibernia_db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME:-hibernia}
      POSTGRES_USER: ${DB_SULOGIN:-hibernia}
      POSTGRES_PASSWORD: ${DB_SUPASSWORD:-hibernia}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - ./database:/docker-entrypoint-initdb.d/

  hibernia:
    image: node
    container_name: hibernia_backend
    restart: always
    environment:
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: 5432 # Для обращения к контейнеру postgres не юзаем переменную окружения
      DB_NAME: ${DB_NAME:-hibernia}
      NODE_ENV: ${NODE_ENV:-development}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      SESSION_LIFETIME_SEC: ${SESSION_LIFETIME_SEC:-86400}
    ports:
      - "${API_PORT:-3000}:3000"
    # По-хорошему исходники надо все хранить в src, ибо тут они будут вместе с database, но пока так
    volumes:
        - ./:/app
    working_dir: /app
    command: bash -c "npm install && npm run swagger-autogen && node index.js"

  swagger:
    image: swaggerapi/swagger-ui
    container_name: hibernia_swagger
    restart: always
    environment:
      URL: "./docs/v1.json"
      DEFAULT_MODELS_EXPAND_DEPTH: -1
    ports:
      - "${SWAGGER_PORT:-8080}:8080"
    volumes:
      - ./docs:/usr/share/nginx/html/docs

  redis:
    image: redis
    container_name: hibernia_redis
    restart: always

  mongo:
    image: mongo
    container_name: hibernia_mongo
    restart: always
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - ./mongo_init:/docker-entrypoint-initdb.d/

  frontend:
    image: node
    container_name: hibernia_frontend
    restart: always
    environment:
      VITE_APP_API: ${API_URL:-http://localhost:3000}
    ports:
      - "${FRONTEND_PORT:-80}:4173"
    volumes:
      - ./HiberniaCRM:/app
    working_dir: /app
    command: bash -c "npm install && npm run build && npm run preview"
